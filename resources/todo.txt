[x] VkInstance -> VkPhysicalDevice -> VkDevice :: vkCreateInstance() → vkEnumeratePhysicalDevices() → vkCreateDevice()
[x] Src and Dst VkBuffer objects using vkCreateBuffer()
[x] Allocate memory: vkAllocateMemory() and bind memory to buffers: vkBindBufferMemory()
[x] Initialize Buffer : vkMapMemory()
[x] Shader Stuff
	[x] Compute Shader: OpenCL -> SPIR-V binary -> Create a VkShaderModule
	[x] Python script to compile .cl file everytime it's modified
	[x] Descriptor Set Layout : Shader Descriptors
	[ ] Descriptor Pool
	[ ] Descriptor Allocation
[x] (Program State) Compute Pipeline
	[x] VkPipelineShaderStageCreateInfo
	[x] VkPipelineLayoutCreateInfo
	[x] VkComputePipelineCreateInfo
	[x] vkCreateComputePipelines()
[ ] VkPipelines are bound to VkCommandBuffer which are created using a VkCommandPool.
[ ] Compute Dispatches are recorded into Command Buffers
[ ] VkCommandBuffer are submitted to a VkQueue. Use vkGetDeviceQueue() and vkQueueSubmit() functions.




